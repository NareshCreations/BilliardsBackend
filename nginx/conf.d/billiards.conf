# Upstream Backend Servers
upstream billiards_backend {
    least_conn;
    server billiards_app:3001 max_fails=3 fail_timeout=30s;
    # Add more app instances here for load balancing
    # server billiards_app_2:3001 max_fails=3 fail_timeout=30s;
}

# Redirect HTTP to HTTPS (Production)
server {
    listen 80;
    server_name localhost billiards.local;
    
    # For development, serve directly
    # In production, uncomment the redirect below
    # return 301 https://$server_name$request_uri;
    
    location / {
        proxy_pass http://billiards_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Rate limiting for general requests
        limit_req zone=general burst=50 nodelay;
        limit_conn conn_limit_per_ip 10;
    }
    
    # Special rate limiting for auth endpoints
    location /api/auth/login {
        proxy_pass http://billiards_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Strict rate limiting for login
        limit_req zone=login burst=3 nodelay;
        limit_conn conn_limit_per_ip 3;
        
        # Additional security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
    }
    
    # Rate limiting for other API endpoints
    location /api/ {
        proxy_pass http://billiards_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API rate limiting
        limit_req zone=api burst=100 nodelay;
        limit_conn conn_limit_per_ip 10;
    }
    
    # Health check endpoint (no rate limiting)
    location /health {
        proxy_pass http://billiards_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        access_log off;
    }
}

# HTTPS Configuration (for production)
server {
    listen 443 ssl http2;
    server_name localhost billiards.local;
    
    # SSL Configuration (add your certificates)
    # ssl_certificate /etc/nginx/ssl/billiards.crt;
    # ssl_certificate_key /etc/nginx/ssl/billiards.key;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Same proxy configuration as HTTP
    location / {
        proxy_pass http://billiards_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        limit_req zone=general burst=50 nodelay;
        limit_conn conn_limit_per_ip 10;
    }
    
    location /api/auth/login {
        proxy_pass http://billiards_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        limit_req zone=login burst=3 nodelay;
        limit_conn conn_limit_per_ip 3;
    }
    
    location /api/ {
        proxy_pass http://billiards_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        limit_req zone=api burst=100 nodelay;
        limit_conn conn_limit_per_ip 10;
    }
}
